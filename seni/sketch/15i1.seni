(define 
  coords1 {[[-289.821 412.431]
            [-246.304 391.563]
            [-387.539 -88.845]
            [386.136 311.688]]
           (vector min: -500 max: 500)}
  coords2 {[[-274.456 328.680]
            [-196.913 -480.973]
            [-1.802 441.034]
            [-111.400 -379.576]]
           (vector min: -500 max: 500)}
  coords3 {[[25.733 375.474]
            [81.391 -187.015]
            [-267.093 90.557]
            [-411.270 -134.507]]
           (vector min: -500 max: 500)}

  col-fn-1 (col/procedural-fn a: {[0.013 0.588 0.909] (scalar)}
                              b: {[0.252 0.953 0.186] (scalar)}
                              c: {[0.927 0.404 0.424] (scalar)}
                              d: {[0.645 0.582 0.877] (scalar)}
                              alpha: 0.08)
  col-fn-2 (col/procedural-fn a: {[0.375 0.758 0.604] (scalar)}
                              b: {[0.768 0.526 0.352] (scalar)}
                              c: {[0.060 0.157 0.420] (scalar)}
                              d: {[0.254 0.518 0.747] (scalar)}
                              alpha: 0.08)
  col-fn-3 (col/procedural-fn a: {[0.800 0.166 0.425] (scalar)}
                              b: {[0.095 0.983 0.381] (scalar)}
                              c: {[0.103 0.173 0.066] (scalar)}
                              d: {[0.265 0.674 0.684] (scalar)}
                              alpha: 0.08))


(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))

  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))


(fn (draw)
  (loop (t from: 0 upto: 1 steps: 200)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col-fn-1 t: t)
                    (col-fn-2 t: t)
                    (col-fn-3 t: t)])))

(fn (render)
  (wash colour: {(col/rgb r: 0.693 g: 0.597 b: 0.584 alpha: 0.562) (col)})
  (on-matrix-stack
    (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
    (repeat/rotate-mirrored draw: draw
                            copies: {4 (int min: 1 max: 30)})))

(render)

