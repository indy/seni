;; main will render a Dawkin's Biomorph
(render)

;; render a segment at 0, 0 with a length along the positive x axis
;;
(define (segment angle: 0.1
                 length: 100
                 colour: (col/rgb r: 0.0 g: 0.0 b: 0.3 alpha: 1.0))
  (rotate angle: angle)
  (rect position: (v2 (/ length 2) 0)
        width: length
        height: [15 (int min: 2 max: 30)]
        colour: colour)
  ;; translate to start the next segment at the end of this one
  (translate x: length y: 0))

;; render-half is a series of segments which will have differing 
;; lengths and angles
;;
(define (render-half)
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]) 
  (segment length: [30 (int max: 100)] angle: [0.1 (scalar max: PIPI)]))

;; render the Biomorph as 2 symmetrical halves
(define (render)
  (translate x: 500 y: 500)
    (on-matrix-stack
      (render-half))
    (on-matrix-stack
     (scale x: -1)
     (render-half)))
