;; a variation of 15fe-rotate-mirror with wash added as a background

(define
  coords []
  colours []
  make-colour (col/procedural-fn a: {[0.394 0.056 0.377] (scalar)}
                                 b: {[0.453 0.611 0.477] (scalar)}
                                 c: {[0.587 0.435 0.449] (scalar)}
                                 d: {[0.608 0.516 0.252] (scalar)})

  focalpoint ({focal/point (select from: ['focal/point
                                          'focal/hline
                                          'focal/vline])} 
              position: [{-68 (int min: -300 max: 300)} 
                         {212 (int min: -300 max: 300)}]
              distance: {819 (int min: 300 max: 900)}))

(loop (t from: 0 to: 1 steps: {39 (int min: 5 max: 100)})
  (define
    p1 (interp/bezier t: t
                      coords: {[(list -249.550 -79.597) (list 194.782 -180.117) (list 21.536 106.905) (list -82.513 153.607)]
                                (vector min: -300 max: 300)})
    p2 (interp/bezier t: t
                      coords: {[(list 90.069 -189.886) (list -84.464 59.473) (list 144.670 -74.757) (list 182.469 159.561)]
                                (vector min: -300 max: 300)})
    c1 (make-colour t: (focalpoint position: p1))
    c2 (make-colour t: (focalpoint position: p2)))
  (append coords p1 p2)
  (append colours c1 c2))

(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))
  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))

(fn (draw)
  (poly coords: coords colours: colours))

(wash colour: {(col/rgb r: 0.932 g: 0.422 b: 0.096 alpha: 0.204) (col)})

(on-matrix-stack
  (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
  (scale scalar: {1.602 (scalar min: 0.8 max: 2)})
  (rotate angle: {167.393 (scalar min: 0 max: 360)})
  (repeat/rotate-mirrored draw: draw
                          copies: {25 (int min: 1 max: 30)}))

