(image linear-colour-space: 1)

(background)
(top-section)
(middle-section)
(lower-section)

(define
  background-colour (col/rgb r: 0.2 ~ (gen/scalar)
                             g: 0.2 ~ (gen/scalar)
                             b: 0.5 ~ (gen/scalar)
                             alpha: 0.9)

  top-colour (col/rgb r: 0.2 ~ (gen/scalar)
                      g: 0.0 ~ (gen/scalar)
                      b: 0.1 ~ (gen/scalar)
                      alpha: 0.9)

  mid-colour (col/lab l: 37.0 ~ (gen/scalar min: 0 max: 100)
                      a: 5.79 ~ (gen/scalar min: -50 max: 50)
                      b: -35.82 ~ (gen/scalar min: -50 max: 50)
                      alpha: 0.7))

(fn (top-section-highlights)
  (define
    iterations 5 ~ (gen/int min: 1 max: 30)
    overlap 1 ~ (gen/int min: 1 max: 20)
    tessellation 35 ~ (gen/int min: 1 max: 50)
    stroke-noise 20 ~ (gen/int min: 1 max: 50)
    colour-volatility 10 ~ (gen/int min: 0 max: 30)
    volatility 10 ~ (gen/int min: 0 max: 30)
    stroke-tessellation 15
    y 750
    width 200
    height 300
    colour (col/set-e2 from: top-colour
                      value: (+ (col/e2 from: top-colour)
                                10.5 ~ (gen/scalar min: 0.0 max: 20.0))))

  (stroked-bezier-rect position: [250 y]
                       width: width
                       height: height
                       iterations: iterations
                       overlap: overlap
                       tessellation: tessellation
                       stroke-tessellation: stroke-tessellation
                       stroke-noise: stroke-noise
                       colour: colour
                       colour-volatility: colour-volatility
                       volatility: volatility
                       seed: 44 ~ (gen/int))
  (stroked-bezier-rect position: [550 y]
                       width: width
                       height: height
                       iterations: iterations
                       overlap: overlap
                       tessellation: tessellation
                       stroke-tessellation: stroke-tessellation
                       stroke-noise: stroke-noise
                       colour: colour
                       colour-volatility: colour-volatility
                       volatility: volatility
                       seed: 45 ~ (gen/int))
  (stroked-bezier-rect position: [850 y]
                       width: width
                       height: height
                       iterations: iterations
                       overlap: overlap
                       tessellation: tessellation
                       stroke-tessellation: stroke-tessellation
                       stroke-noise: stroke-noise
                       colour: colour
                       colour-volatility: colour-volatility
                       volatility: volatility
                       seed: 46 ~ (gen/int)))

(fn (top-section)
  (stroked-bezier-rect position: [500 750]
                       width: 900
                       height: 400
                       iterations: 40 ~ (gen/int min: 1 max: 100)
                       overlap: 10 ~ (gen/int min: 1 max: 100)
                       tessellation: 35 ~ (gen/int min: 1 max: 50)
                       stroke-tessellation: 15
                       stroke-noise: 20 ~ (gen/int min: 1 max: 50)
                       colour: top-colour
                       colour-volatility: 10 ~ (gen/int min: 0 max: 30)
                       volatility: 10 ~ (gen/int min: 0 max: 30)
                       seed: 44 ~ (gen/int))
  (top-section-highlights))

(fn (middle-section)
  (stroked-bezier-rect position: [500 425]
                       width: 900
                       height: 250
                       iterations: 40 ~ (gen/int min: 1 max: 100)
                       overlap: 10 ~ (gen/int min: 1 max: 100)
                       tessellation: 35 ~ (gen/int min: 1 max: 50)
                       stroke-tessellation: 15
                       stroke-noise: 20 ~ (gen/int min: 1 max: 50)
                       colour: mid-colour
                       colour-volatility: 10 ~ (gen/int min: 0 max: 30)
                       volatility: 10 ~ (gen/int min: 0 max: 30)
                       seed: 44 ~ (gen/int)))

(fn (lower-section)
  (define
    colour (col/set-e2 from: mid-colour
                       value: (- (col/e2 from: mid-colour)
                                 20.5 ~ (gen/scalar min: 0.0 max: 20.0))))
  (stroked-bezier-rect position: [500 200]
                       width: 900
                       height: 300
                       iterations: 40 ~ (gen/int min: 1 max: 100)
                       overlap: 10 ~ (gen/int min: 1 max: 100)
                       tessellation: 35 ~ (gen/int min: 1 max: 50)
                       stroke-tessellation: 15
                       stroke-noise: 20 ~ (gen/int min: 1 max: 50)
                       colour: colour
                       colour-volatility: 10 ~ (gen/int min: 0 max: 30)
                       volatility: 10 ~ (gen/int min: 0 max: 30)
                       seed: 44 ~ (gen/int)))

(fn (background)
  (rect position: [500 500]
        width: canvas/width
        height: canvas/height
        colour: background-colour)
  (stroked-bezier-rect position: [500 500]
                       width: canvas/width
                       height: canvas/height
                       iterations: 100 ~ (gen/int min: 1 max: 100)
                       overlap: 10 ~ (gen/int min: 1 max: 100)
                       tessellation: 35 ~ (gen/int min: 1 max: 50)
                       stroke-tessellation: 15
                       stroke-noise: 30 ~ (gen/int min: 1 max: 50)
                       colour: background-colour
                       colour-volatility: 20 ~ (gen/int min: 0 max: 30)
                       volatility: 3 ~ (gen/int min: 0 max: 20)
                       seed: 44 ~ (gen/int)))

(fn (stroked-bezier-rect position: [100 100]
                         width: 80
                         height: 600
                         volatility: 30
                         overlap: 0
                         iterations: 10
                         seed: 0

                         tessellation: 15
                         stroke-tessellation: 10
                         stroke-noise: 25

                         colour: (col/rgb r: 0.0 g: 1.0 b: 0.0 alpha: 0.5)
                         colour-volatility: 0

                         brush: brush/flat
                         brush-subtype: 1)
  (define
    [x y] position

    x-start (- x (/ width 2.0))
    y-start (- y (/ height 2.0))

    th-width (/ width 3.0)
    th-height (/ height 3.0)

    vol volatility

    cc-lab(colour.col/convert format: LAB)
    half-alpha-col (col/set-alpha from: cc-lab value: (* 0.5 (cc-lab.col/alpha)))

    prng (prng/build seed min: -1 max: 1)

    sum-thickness (+ height (* (- iterations 1.0) overlap))
    stroke-thickness (/ sum-thickness iterations)
    stroke-half-thickness (/ stroke-thickness 2.0)
    stroke-offset-factor (/ (- height overlap) iterations)

    v-sum-thickness (+ width (* (- iterations 1.0) overlap))
    v-stroke-thickness (/ v-sum-thickness iterations)
    v-stroke-half-thickness (/ v-stroke-thickness 2.0)
    v-stroke-offset-factor (/ (- width overlap) iterations))

  ;; horizontal strokes
  (loop (i to: iterations)
    (define
      h (+ y-start stroke-half-thickness (* i stroke-offset-factor))
      coords [[(+ (* (prng.prng/value) vol) x-start (* 0 th-width))
               (+ h (* (prng.prng/value) vol))]
              [(+ (* (prng.prng/value) vol) x-start (* 1 th-width))
               (+ h (* (prng.prng/value) vol))]
              [(+ (* (prng.prng/value) vol) x-start (* 2 th-width))
               (+ h (* (prng.prng/value) vol))]
              [(+ (* (prng.prng/value) vol) x-start (* 3 th-width))
               (+ h (* (prng.prng/value) vol))]])
    (stroked-bezier tessellation
                    coords
                    stroke-tessellation
                    stroke-noise
                    stroke-line-width-start: stroke-thickness
                    stroke-line-width-end: stroke-thickness
                    colour: half-alpha-col
                    colour-volatility
                    seed: (prng.prng/value)
                    brush
                    brush-subtype))

  ;; vertical strokes
  (loop (i to: iterations)
    (define
      v (+ x-start v-stroke-half-thickness (* i v-stroke-offset-factor))
      coords [[(+ v (* (prng.prng/value) vol))
               (+ (* (prng.prng/value) vol) y-start (* 0 th-height))]
              [(+ v (* (prng.prng/value) vol))
               (+ (* (prng.prng/value) vol) y-start (* 1 th-height))]
              [(+ v (* (prng.prng/value) vol))
               (+ (* (prng.prng/value) vol) y-start (* 2 th-height))]
              [(+ v (* (prng.prng/value) vol))
               (+ (* (prng.prng/value) vol) y-start (* 3 th-height))]])
    (stroked-bezier tessellation
                    coords
                    stroke-tessellation
                    stroke-noise
                    stroke-line-width-start: stroke-thickness
                    stroke-line-width-end: stroke-thickness
                    colour: half-alpha-col
                    colour-volatility
                    seed: (prng.prng/value)
                    brush
                    brush-subtype)))
