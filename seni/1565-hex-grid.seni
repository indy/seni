(define scalefactor [1.5 (scalar min: 0.5 max: 3)])
(define hex-size [30 (int min: 10 max: 100)])

(define background [(col/rgb r: 1 g: 1 b: 1 alpha: 1) (col)])
(define colour-a [(col/rgb r: 0 g: 0 b: 0.4 alpha: 1) (col)])
(define colour-b [(col/rgb r: 1 g: 0 b: 0.4 alpha: 1) (col)])

(define focalpoint (focal/point position: (v2 [500 (int max: canvas/width)]
                                              [500 (int max: canvas/height)])
                                distance: [400 (int min: 200 max: canvas/width)]))

(define centre (v2 (/ canvas/width 2) (/ canvas/height 2)))

(define (hexagon position: centre
                 colour: black
                 size: 100)
  (poly colour: colour
        radius: (* size 0.95) 
        position: position
        tessellation: 6))

(define (hex-grid from: (v2 0 0)
                  to: (v2 canvas/width canvas/height)
                  colour: red
                  size: 30)
  (let ((height (* size 2))
        (vert (* height 0.75))
        (width (* (/ (sqrt 3) 2) height)))
    (loop (y from: (v2/y from)
             to: (+ (v2/y to) vert vert)
             increment: (+ vert vert))
      (loop (x from: (v2/x from)
               to: (+ (v2/x to) width)
               increment: width)
        (hexagon size: size
                 colour: (col/set-alpha colour: colour
                                        value: (focalpoint position: (v2 x y)))
                 position: (v2 x y))))

    (loop (y from: (+ (v2/y from) vert)
             to: (+ (v2/y to) vert vert)
             increment: (+ vert vert))
      (loop (x from: (+ (v2/x from) (/ width 2))
               to: (+ (v2/x to) width)
               increment: width)
        (hexagon size: size
                 colour: (col/set-alpha colour: colour
                                        value: (focalpoint position: (v2 x y)))
                 position: (v2 x y))))))

(rect position: centre
      width: canvas/width
      height: canvas/height
      colour: background)

(translate vector: centre)
(rotate angle: [35 (scalar max: 360)])
(scale scalar: scalefactor)

(hex-grid from: (v2 -700 -700)
          to: (v2 700 700)
          size: hex-size
          colour: colour-a)

(hex-grid from: (v2 -500 -500)
          to: centre
          size: hex-size
          colour: colour-b)
