(meta linear-colour-space: 1)


;; sketch/1843-fields.seni
(define
  rng (prng/build seed: {123 (gen/int min: 1 max: 9999)} min: -1 max: 1)
  foc-a (focal/build-point position: {[0 0] (gen/scalar min: -500 max: 500)}
                           distance: {400 (gen/scalar min: 100 max: 600)}
                           transform-position: 0)
  foc-b (focal/build-point position: {[-100 -100] (gen/scalar min: -500 max: 500)}
                           distance: {400 (gen/scalar min: 100 max: 600)}
                           mapping: ease/slow-in-out
                           transform-position: 0)
  col-h {90 (gen/scalar min: 0 max: 360)}
  col-s {90 (gen/scalar min: 0 max: 100)}
  col-l {90 (gen/scalar min: 0 max: 100)}
  bg-col (col/hsluv h: col-h
                    s: (math/clamp value: (- col-s 50) min: 0 max: 100)
                    l: (math/clamp value: (- col-l 10) min: 0 max: 100)
                    alpha: 1.0)
  main-col (col/hsluv h: col-h s: col-s l: col-l alpha: 1.0))

(fn (offset-position position: [500 500] sc: 1)
    [(+ (x from: position) (* (prng/value from: rng) sc))
     (+ (y from: position) (* (prng/value from: rng) sc))])

;; calling offset-position with a small variance looks really good
;; (todo: blend the bg colour towards the fg col, using focal-a)
(fn (bg position: [500 500] size: 20 focal-a: 0 focal-b: 0)
  (define
    focal-val (focal/value from: focal-b position: position))
  (circle position: (offset-position position: position sc: (+ 2 (* 8 focal-val)))
          radius: 3
          colour: (col/set-alpha from: bg-col value: (- 1 focal-val))))

(fn (h-rects position: [500 500] size: 20 focal-a: 0 focal-b: 0)
  (if (> (focal/value from: focal-a position: position) 0)
      (rect position: (offset-position position: position sc: 8)
            width: (* {27 (gen/scalar min: 10 max: 200)} (focal/value from: focal-b position: position))
            height: 3
            colour: main-col)))

(fn (v-rects position: [500 500] size: 20 focal-a: 0 focal-b: 0)
  (if (> (focal/value from: focal-a position: position) 0)
      (rect position: (offset-position position: position sc: 8)
            height: (* {27 (gen/scalar min: 10 max: 200)} (focal/value from: focal-b position: position))
            width: 3
            colour: main-col)))

(fn (grid density: 5 draw-fn: 0 focal-a: 0 focal-b: 0)
  (fence (y from: -500 to: 500 num: density)
    (fence (x from: -500 to: 500 num: density)
      (fn-call (draw-fn position: [x y]
                        focal-a: focal-a
                        focal-b: focal-b)))))

(on-matrix-stack
  (translate vector: [500 500])
  (rotate angle: 0)
  (scale scalar: 1.0)

  (grid density: 50
        draw-fn: (address-of bg)
        focal-a: foc-a
        focal-b: foc-b)

  (grid density: 50
        draw-fn: (address-of h-rects)
        focal-a: foc-a
        focal-b: foc-b)

  (grid density: 50
        draw-fn: (address-of v-rects)
        focal-a: foc-a
        focal-b: foc-b))
