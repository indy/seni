(meta linear-colour-space: 1)


(background)
(top-section)
(middle-section)
(lower-section)

(define
  background-colour (col/rgb r: {0.2 (gen/scalar)}
                             g: {0.2 (gen/scalar)}
                             b: {0.5 (gen/scalar)}
                             alpha: 0.9)

  top-colour (col/rgb r: {0.2 (gen/scalar)}
                      g: {0.0 (gen/scalar)}
                      b: {0.1 (gen/scalar)}
                      alpha: 0.9)

  mid-colour (col/lab l: {37.0 (gen/scalar min: 0 max: 100)}
                      a: {5.79 (gen/scalar min: -50 max: 50)}
                      b: {-35.82 (gen/scalar min: -50 max: 50)}
                      alpha: 0.7))

(fn (top-section-highlights)
  (define
    iterations {5 (gen/int min: 1 max: 30)}
    overlap {1 (gen/int min: 1 max: 20)}
    tessellation {35 (gen/int min: 1 max: 50)}
    stroke-noise {20 (gen/int min: 1 max: 50)}
    colour-volatility {10 (gen/int min: 0 max: 30)}
    volatility {10 (gen/int min: 0 max: 30)}
    stroke-tessellation 15
    y 750
    width 200
    height 300
    colour (col/set-e2 from: top-colour
                      value: (+ (col/e2 from: top-colour)
                                {10.5 (gen/scalar min: 0.0 max: 20.0)})))

  (stroked-bezier-rect position: [250 y]
                       width: width
                       height: height
                       iterations: iterations
                       overlap: overlap
                       tessellation: tessellation
                       stroke-tessellation: stroke-tessellation
                       stroke-noise: stroke-noise
                       colour: colour
                       colour-volatility: colour-volatility
                       volatility: volatility
                       seed: {44 (gen/int)})
  (stroked-bezier-rect position: [550 y]
                       width: width
                       height: height
                       iterations: iterations
                       overlap: overlap
                       tessellation: tessellation
                       stroke-tessellation: stroke-tessellation
                       stroke-noise: stroke-noise
                       colour: colour
                       colour-volatility: colour-volatility
                       volatility: volatility
                       seed: {45 (gen/int)})
  (stroked-bezier-rect position: [850 y]
                       width: width
                       height: height
                       iterations: iterations
                       overlap: overlap
                       tessellation: tessellation
                       stroke-tessellation: stroke-tessellation
                       stroke-noise: stroke-noise
                       colour: colour
                       colour-volatility: colour-volatility
                       volatility: volatility
                       seed: {46 (gen/int)}))

(fn (top-section)
  (stroked-bezier-rect position: [500 750]
                       width: 900
                       height: 400
                       iterations: {40 (gen/int min: 1 max: 100)}
                       overlap: {10 (gen/int min: 1 max: 100)}
                       tessellation: {35 (gen/int min: 1 max: 50)}
                       stroke-tessellation: 15
                       stroke-noise: {20 (gen/int min: 1 max: 50)}
                       colour: top-colour
                       colour-volatility: {10 (gen/int min: 0 max: 30)}
                       volatility: {10 (gen/int min: 0 max: 30)}
                       seed: {44 (gen/int)})
  (top-section-highlights))

(fn (middle-section)
  (stroked-bezier-rect position: [500 425]
                       width: 900
                       height: 250
                       iterations: {40 (gen/int min: 1 max: 100)}
                       overlap: {10 (gen/int min: 1 max: 100)}
                       tessellation: {35 (gen/int min: 1 max: 50)}
                       stroke-tessellation: 15
                       stroke-noise: {20 (gen/int min: 1 max: 50)}
                       colour: mid-colour
                       colour-volatility: {10 (gen/int min: 0 max: 30)}
                       volatility: {10 (gen/int min: 0 max: 30)}
                       seed: {44 (gen/int)}))

(fn (lower-section)
  (define
    colour (col/set-e2 from: mid-colour
                       value: (- (col/e2 from: mid-colour)
                                 {20.5 (gen/scalar min: 0.0 max: 20.0)})))
  (stroked-bezier-rect position: [500 200]
                       width: 900
                       height: 300
                       iterations: {40 (gen/int min: 1 max: 100)}
                       overlap: {10 (gen/int min: 1 max: 100)}
                       tessellation: {35 (gen/int min: 1 max: 50)}
                       stroke-tessellation: 15
                       stroke-noise: {20 (gen/int min: 1 max: 50)}
                       colour: colour
                       colour-volatility: {10 (gen/int min: 0 max: 30)}
                       volatility: {10 (gen/int min: 0 max: 30)}
                       seed: {44 (gen/int)}))

(fn (background)
  (rect position: [500 500]
        width: canvas/width
        height: canvas/height
        colour: background-colour)
  (stroked-bezier-rect position: [500 500]
                       width: canvas/width
                       height: canvas/height
                       iterations: {100 (gen/int min: 1 max: 100)}
                       overlap: {10 (gen/int min: 1 max: 100)}
                       tessellation: {35 (gen/int min: 1 max: 50)}
                       stroke-tessellation: 15
                       stroke-noise: {30 (gen/int min: 1 max: 50)}
                       colour: background-colour
                       colour-volatility: {20 (gen/int min: 0 max: 30)}
                       volatility: {3 (gen/int min: 0 max: 20)}
                       seed: {44 (gen/int)}))
