(define 
  coords1 {[[153.326 66.565]
            [-143.219 370.216]
            [-254.094 -214.417]
            [368.038 -58.687]]
           (gen/vector min: -500 max: 500)}
  coords2 {[[29.449 -88.566]
            [-181.104 317.846]
            [-457.779 46.556]
            [461.392 -414.827]]
           (gen/vector min: -500 max: 500)}
  coords3 {[[-445.078 -431.034]
            [-287.184 -394.192]
            [225.426 -71.645]
            [311.633 -352.704]]
           (gen/vector min: -500 max: 500)}

  col-fn-1 (col/build-procedural a: {[0.224 0.120 0.710] (gen/scalar)}
                              b: {[0.589 0.819 0.879] (gen/scalar)}
                              c: {[0.622 0.476 0.884] (gen/scalar)}
                              d: {[0.822 0.732 0.425] (gen/scalar)}
                              alpha: 0.08)
  col-fn-2 (col/build-procedural a: {[0.992 0.035 0.678] (gen/scalar)}
                              b: {[0.136 0.560 0.367] (gen/scalar)}
                              c: {[0.701 0.609 0.479] (gen/scalar)}
                              d: {[0.515 0.340 0.555] (gen/scalar)}
                              alpha: 0.08)
  col-fn-3 (col/build-procedural a: {[0.212 0.128 0.661] (gen/scalar)}
                              b: {[0.714 0.956 0.862] (gen/scalar)}
                              c: {[0.789 0.114 0.110] (gen/scalar)}
                              d: {[0.203 0.858 0.592] (gen/scalar)}
                              alpha: 0.08)
  step-1 (/ 1 200))

(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)
  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))
  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (wash-wobble x: 0 y: h z: seed s: variation)]
                     [w/3 (wash-wobble x: w/3 y: h z: seed s: variation)]
                     [(* w/3 2) (wash-wobble x: (* w/3 2) y: h z: seed s: variation)]
                     [canvas/width (wash-wobble x: canvas/width y: h z: seed s: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(wash-wobble x: 0 y: h z: seed s: variation) 0]
                     [(wash-wobble x: h/3 y: h z: seed s: variation) h/3]
                     [(wash-wobble x: (* h/3 2) y: h z: seed s: variation) (* h/3 2)]
                     [(wash-wobble x: canvas/height y: h z: seed s: variation) canvas/height]]
            colour: colour)))

(fn (wash-wobble x: 0 y: 0 z: 0 s: 1)
  (+ y (* s (prng/perlin x: x y: y z: z))))


(fn (draw)
    (loop (t from: 0 upto: 1 increment: step-1)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col/value from: col-fn-1 t: t)
                    (col/value from: col-fn-2 t: t)
                    (col/value from: col-fn-3 t: t)])))

(fn (render)
  (wash colour: {(col/rgb r: 0.548 g: 0.920 b: 0.658 alpha: 0.601) (gen/col)})
  (on-matrix-stack
    (translate vector: [(/ canvas/width 1) (/ canvas/height 2)])
    (scale scalar: 2)
    (repeat/rotate-mirrored fn: (address-of draw)
                            copies: {8 (gen/int min: 1 max: 10)})))

(render)
