(meta linear-colour-space: 1)


(define centre [500 500])
(define master-radius 50 ~ (gen/scalar min: 30 max: 80))
(define corner-square-mult 0.5 ~ (gen/scalar min: 0.3 max: 1.0))
(define master-angle 0 ~ (gen/scalar max: math/TAU))

;; draw-octagon renders an octagon with it's center in position
(fn (draw-octagon position: [100 100]
                      radius: 100
                      colour: black)
  (on-matrix-stack
   (translate vector: position)
   (rotate angle: (/ math/TAU 16)) ; align
   (circle position: [0 0]
           tessellation: 8
           width: radius
           height: radius
           colour: colour)))

(fn (draw-unit-square colour: black)
    (rect position: [0 0]
        width: 1
        height: 1
        colour: colour))

;; draws a square to the top-right of an octagon described by position and radius
(fn (draw-corner-square position: [100 100]
                            radius: 100
                            colour: black)
  (define [x y] position)
  (on-matrix-stack
   (translate vector: [(+ radius x) (+ radius y)])
    (scale scalar: (* radius corner-square-mult))
    (rotate angle: (/ math/PI 4))
    (draw-unit-square colour: colour)))


(fn (draw)
    (define main-col yellow ~ (gen/col alpha: 1)
      (triad-b triad-c) (col/analagous ~ (gen/select from: ['col/analagous
                                                          'col/split-complementary
                                                          'col/triad])
                       from: main-col))
  (rect position: [500 500]
        width: 1000
        height: 1000
        colour: triad-b)

  (on-matrix-stack
    (translate vector: centre)
    (rotate angle: master-angle)
    (loop (y from: -700 upto: 700 inc: (* 2 master-radius))
      (loop (x from: -700 upto: 700 inc: (* 2 master-radius))
            (draw-octagon position: [x y]
                      radius: master-radius
                      colour: main-col))))

  (on-matrix-stack
    (translate vector: centre)
    (rotate angle: master-angle)
    (loop (y from: -700 upto: 700 inc: (* 2 master-radius))
      (loop (x from: -700 upto: 700 inc: (* 2 master-radius))
            (draw-corner-square position: [x y]
                            radius: master-radius
                            colour: triad-c)))))


(draw)
