(meta linear-colour-space: 1)


(define
  coords1 {[[-306.440 -420.414]
            [74.096 -347.654]
            [-183.828 -380.454]
            [139.696 -188.675]]
           (gen/2d min: -500 max: 500)}
  coords2 {[[-44.663 -282.768]
            [-329.692 -130.704]
            [313.436 448.917]
            [164.377 197.854]]
           (gen/2d min: -500 max: 500)}
  coords3 {[[-114.835 -305.887]
            [236.405 -310.621]
            [-105.256 -58.435]
            [-274.251 -349.727]]
           (gen/2d min: -500 max: 500)}

  col-1 (col/build-procedural preset: {robocop (gen/select from: col/procedural-fn-presets)}
                              alpha: 0.08)
  col-2 (col/build-procedural preset: {chrome (gen/select from: col/procedural-fn-presets)}
                              alpha: 0.08)
  col-3 (col/build-procedural preset: {chrome (gen/select from: col/procedural-fn-presets)}
                              alpha: 0.08))

(fn (draw)
    (fence (t num: 200)
          (poly coords: [(interp/bezier t: t coords: coords1)
                         (interp/bezier t: t coords: coords2)
                         (interp/bezier t: t coords: coords3)]
                colours: [(col/value from: col-1 t: t)
                          (col/value from: col-2 t: t)
                          (col/value from: col-3 t: t)])))

(fn (render)
    (on-matrix-stack
     (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
     (repeat/rotate-mirrored fn: (address-of draw)
                             copies: {6 (gen/int min: 1 max: 8)})))

(render)
