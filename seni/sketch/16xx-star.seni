(define 
  coords1 {[[-16.200 -87.700]
            [-273.060 -168.239]
            [430.975 61.829]
            [-31.060 41.194]]
                    (gen/vector min: -500 max: 500)}
  coords2 {[[-40.860 -471.796]
            [449.439 -309.675]
            [-323.095 267.840]
            [-104.251 112.489]]
                      (gen/vector min: -500 max: 500)}
  coords3 {[[-202.860 280.206]
            [-244.704 108.644]
            [105.021 64.211]
            [-7.379 -144.927]]
                      (gen/vector min: -500 max: 500)}

  col-fn-1 (col/procedural-fn a: {[0.530 0.693 0.481] (gen/scalar)}
                              b: {[0.399 0.205 0.523] (gen/scalar)}
                              c: {[0.710 0.587 0.365] (gen/scalar)}
                              d: {[0.299 0.086 0.762] (gen/scalar)}
                              alpha: 0.08)
  col-fn-2 (col/procedural-fn a: {[0.418 0.015 0.259] (gen/scalar)}
                              b: {[0.959 0.312 0.517] (gen/scalar)}
                              c: {[0.754 0.364 0.790] (gen/scalar)}
                              d: {[0.741 0.316 0.332] (gen/scalar)}
                              alpha: 0.08)
  col-fn-3 (col/procedural-fn a: {[0.405 0.679 0.190] (gen/scalar)}
                              b: {[0.943 0.905 0.287] (gen/scalar)}
                              c: {[0.282 0.407 0.127] (gen/scalar)}
                              d: {[0.489 0.462 0.707] (gen/scalar)}
                              alpha: 0.08))


(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))

  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))


(fn (draw)
  (loop (t from: 0 upto: 1 steps: 200)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col-fn-1 t: t)
                    (col-fn-2 t: t)
                    (col-fn-3 t: t)])))

(fn (render)
  (wash colour: {(col/rgb r: 0.810 g: 0.593 b: 0.355 alpha: 0.936) (gen/col)})
  (on-matrix-stack
    (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
    (repeat/rotate-mirrored draw: draw
                            copies: {7 (gen/int min: 1 max: 30)})))

(render)

