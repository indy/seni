(wash colour:  {(col/rgb r: 0.331 g: 0.588 b: 0.516 alpha: 0.100) (col)})
(tri-hsl alpha: {0.393 (scalar)})
(tri-lab alpha: {0.265 (scalar)})

(fn (tri-lab alpha: 1)
  (define
    w 86.6
    h 50
    r (prng/range)
    colour-scale {65 (int max: 900)}
    colour-offset (prng/range min: -1 max: 1)
    li (interp/fn from: [0 1]
                  to: [{107 (int min: 0 max: 120)} 
                       {107 (int min: 0 max: 120)}])
    rma (interp/fn from: [0 canvas/width]
                   to: [{7 (int min: -100 max: 100)} 
                        {-42 (int min: -100 max: 100)}])
    rmb (interp/fn from: [0 canvas/height]
                   to: [{35 (int min: -120 max: 120)}
                        {-21 (int min: -120 max: 120)}]))

  (loop (y from: 0 upto: canvas/height increment: 100)
    (loop (x from: 0 upto: canvas/width increment: (* 2 w))
      (define 
        a (rma val: (+ x (* (colour-offset) colour-scale)))
        b (rmb val: (+ y (* (colour-offset) colour-scale))))
      (poly coords: [[x (+ y 0)]
                     [(+ x w) (+ y h)]
                     [x (+ y h h)]]
            colours: [(col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)])
      (poly coords: [[x (+ y 0)]
                     [(+ x w) (+ y h)]
                     [(+ x w) (- y h)]]
            colours: [(col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)]))

    (loop (x from: w upto: canvas/width increment: (* 2 w))
      (define
        a (rma val: (+ x (* (colour-offset) colour-scale)))
        b (rmb val: (+ y (* (colour-offset) colour-scale))))

      (poly coords: [[x (+ y h)]
                     [(+ x w) (+ y h h)]
                     [(+ x w) (+ y 0)]]
            colours: [(col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)])
      (poly coords: [[x (+ y h)]
                     [(+ x w) (+ y 0)]
                     [x (- y h)]]
            colours: [(col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)
                      (col/lab l: (li val: (r)) a: a b: b alpha: alpha)]))))

(fn (tri-hsl alpha: 1)
  (define 
    w 86.6
    h 50
    r (prng/range)
    colour-scale {180 (int max: 900)}
    colour-offset (prng/range min: -1 max: 1)
    li (interp/fn from: [0 1]
                  to: [{65 (int min: 0 max: 120)} 
                       {92 (int min: 0 max: 120)}])
    fn-h (interp/fn from: [0 canvas/width]
                    to: [{60 (int max: 360)} 
                         {140 (int max: 360)}])
    fn-l (interp/fn from: [0 canvas/height]
                    to: [{0.227 (scalar min: 0.2 max: 0.5)} 
                         {0.873 (scalar min: 0.4 max: 1)}]))
  (loop (y from: 0 upto: canvas/height increment: 100)
    (loop (x from: 0 upto: canvas/width increment: (* 2 w))
      (define 
        a (fn-h val: (+ x (* (colour-offset) colour-scale)))
        b (fn-l val: (+ y (* (colour-offset) colour-scale))))

      (poly coords: [[x (+ y 0)]
                     [(+ x w) (+ y h)]
                     [x (+ y h h)]]
            colours: [(col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)])
      (poly coords: [[x (+ y 0)]
                     [(+ x w) (+ y h)]
                     [(+ x w) (- y h)]]
            colours: [(col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)]))

    (loop (x from: w upto: canvas/width increment: (* 2 w))
      (define 
        a (fn-h val: (+ x (* (colour-offset) colour-scale)))
        b (fn-l val: (+ y (* (colour-offset) colour-scale))))

      (poly coords: [[x (+ y h)]
                     [(+ x w) (+ y h h)]
                     [(+ x w) (+ y 0)]]
            colours: [(col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)])
      (poly coords: [[x (+ y h)]
                     [(+ x w) (+ y 0)]
                     [x (- y h)]]
            colours: [(col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)
                      (col/hsl h: a s: 1 l: b alpha: alpha)]))))

(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))
  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))
