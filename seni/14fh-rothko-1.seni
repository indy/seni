(rect position: (v2 (/ canvas/width 2) (/ canvas/height 2))
      width: canvas/width
      height: canvas/height
      colour: (col/rgb r: 0 g: 0 b: 0 alpha: 1))
(wash colour: (col/rgb r: 0.15 g: 0.1 b: 0.2 alpha: 0.1))

(stroked-bezier-rect position: (v2 (/ canvas/width 2) 600)
                     width: 800 height: 600
                     colour-volatility: [90 (int min: 0 max: 60)]
                     colour: (col/rgb r: [0.8 (scalar)]
                                      g: [0.0 (scalar)]
                                      b: [0.0 (scalar)]
                                      alpha: 0.3)
                     volatility: [2 (int min: 0 max: 100)]
                     iterations: [90 (int min: 0 max: 100)]
                     seed: [40 (int min: 0 max: 100)]
                     overlap: [90.0 (scalar min: 0 max: 5.0)])

(stroked-bezier-rect position: (v2 (/ canvas/width 2) 200)
                     width: 760 height: 200
                     colour-volatility: [9 (int min: 0 max: 50)]
                     colour: (col/rgb r: [0.15 (scalar)]
                                      g: [0.10 (scalar)]
                                      b: [0.20 (scalar)]
                                      alpha: 0.3)
                     volatility: [20 (int min: 0 max: 100)]
                     iterations: [90 (int min: 0 max: 100)]
                     seed: [42 (int min: 0 max: 100)]
                     overlap: [10.0 (scalar min: 0 max: 5.0)])

(fn (v x: 0 y: 0 z: 0 scale: 1)
  (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

(fn (wash variation: 200
              line-width: 70
              line-segments: 5
              colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
              seed: 272)
  (define-vars w/3 (/ canvas/width 3)
               h/3 (/ canvas/height 3))
  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: (list
                     (v2 0 (v x: 0 y: h z: seed scale: variation))
                     (v2 w/3 (v x: w/3 y: h z: seed scale: variation))
                     (v2 (* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation))
                     (v2 canvas/width (v x: canvas/width y: h z: seed scale: variation)))
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: (list
                     (v2 (v x: 0 y: h z: seed scale: variation) 0)
                     (v2 (v x: h/3 y: h z: seed scale: variation) h/3)
                     (v2 (v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2))
                     (v2 (v x: canvas/height y: h z: seed scale: variation) canvas/height))
            colour: colour)))

