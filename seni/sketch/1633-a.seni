(define 
  coords1 {[[-166.443 355.245]
            [69.006 401.477]
            [319.123 -296.061]
            [-226.245 -165.240]]
                    (gen/vector min: -500 max: 500)}
  coords2 {[[155.063 -483.884]
            [260.482 204.008]
            [39.495 -56.266]
            [116.908 -369.017]]
                      (gen/vector min: -500 max: 500)}
  coords3 {[[-22.134 199.581]
            [-153.695 162.196]
            [305.755 6.170]
            [18.671 -490.294]]
                      (gen/vector min: -500 max: 500)}

  col-fn-1 (col/procedural-fn a: {[0.432 0.106 0.535] (gen/scalar)}
                              b: {[0.353 0.688 0.176] (gen/scalar)}
                              c: {[0.436 0.635 0.947] (gen/scalar)}
                              d: {[0.932 0.364 0.194] (gen/scalar)}
                              alpha: 0.08)
  col-fn-2 (col/procedural-fn a: {[0.440 0.543 0.909] (gen/scalar)}
                              b: {[0.335 0.160 0.760] (gen/scalar)}
                              c: {[0.169 0.125 0.258] (gen/scalar)}
                              d: {[0.852 0.121 0.579] (gen/scalar)}
                              alpha: 0.08)
  col-fn-3 (col/procedural-fn a: {[0.855 0.451 0.754] (gen/scalar)}
                              b: {[0.475 0.520 0.623] (gen/scalar)}
                              c: {[0.839 0.740 0.371] (gen/scalar)}
                              d: {[0.717 0.631 0.202] (gen/scalar)}
                              alpha: 0.08))


(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))

  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))


(fn (draw)
  (loop (t from: 0 upto: 1 steps: 200)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col-fn-1 t: t)
                    (col-fn-2 t: t)
                    (col-fn-3 t: t)])))

(fn (render)
  (wash colour: {(col/rgb r: 0.914 g: 0.278 b: 0.557 alpha: 0.901) (gen/col)})
  (on-matrix-stack
    (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
    (repeat/rotate-mirrored draw: draw
                            copies: {14 (gen/int min: 1 max: 30)})))

(render)

