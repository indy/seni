(define 
  coords1 {[[-93.474 30.789]
            [12.860 -115.420]
            [9.174 415.564]
            [307.752 115.163]]
           (vector min: -500 max: 500)}
  coords2 {[[263.535 163.360]
            [463.316 -483.654]
            [-126.369 163.186]
            [-110.559 144.470]]
           (vector min: -500 max: 500)}
  coords3 {[[246.179 333.430]
            [175.995 205.296]
            [415.600 -409.797]
            [-284.530 207.528]]
           (vector min: -500 max: 500)}

  col-fn-1 (col/procedural-fn a: {[0.500 0.688 0.908] (scalar)}
                              b: {[0.256 0.838 0.984] (scalar)}
                              c: {[0.104 0.601 0.336] (scalar)}
                              d: {[0.073 0.403 0.759] (scalar)}
                              alpha: 0.08)
  col-fn-2 (col/procedural-fn a: {[0.642 0.748 0.334] (scalar)}
                              b: {[0.928 0.543 0.441] (scalar)}
                              c: {[0.237 0.239 0.426] (scalar)}
                              d: {[0.739 0.418 0.843] (scalar)}
                              alpha: 0.08)
  col-fn-3 (col/procedural-fn a: {[0.174 0.541 0.742] (scalar)}
                              b: {[0.014 0.900 0.972] (scalar)}
                              c: {[0.650 0.115 0.842] (scalar)}
                              d: {[0.571 0.494 0.150] (scalar)}
                              alpha: 0.08))


(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))

  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))


(fn (draw)
  (loop (t from: 0 upto: 1 steps: 200)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col-fn-1 t: t)
                    (col-fn-2 t: t)
                    (col-fn-3 t: t)])))

(fn (render)
  (on-matrix-stack
    (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
    (repeat/rotate-mirrored draw: draw
                            copies: {2 (int min: 1 max: 30)})))

(render)

