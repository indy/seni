(define 
  coords1 {[[-380.559 -302.062]
            [-285.454 -474.428]
            [342.392 234.727]
            [110.418 -159.441]]
           (vector min: -500 max: 500)}
  coords2 {[[-93.395 -113.432]
            [363.150 -29.463]
            [-164.617 308.666]
            [16.711 61.422]]
           (vector min: -500 max: 500)}
  coords3 {[[31.337 -75.713]
            [-380.814 96.363]
            [-77.547 -11.253]
            [-274.251 -349.727]]
           (vector min: -500 max: 500)}

  col-fn-1 (col/procedural-fn preset: {"robocop" 
                                       (select from: col/procedural-fn-presets)}
                              alpha: 0.08)
  col-fn-2 (col/procedural-fn preset: {"chrome" 
                                       (select from: col/procedural-fn-presets)}
                              alpha: 0.08)
  col-fn-3 (col/procedural-fn preset: {"chrome" 
                                       (select from: col/procedural-fn-presets)}
                              alpha: 0.08))


(fn (draw)
  (loop (t from: 0 upto: 1 steps: 200)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col-fn-1 t: t)
                    (col-fn-2 t: t)
                    (col-fn-3 t: t)])))

(fn (render)
  (on-matrix-stack
    (translate vector: [(/ canvas/width 2) (/ canvas/height 2)])
    (repeat/rotate-mirrored draw: draw
                            copies: {6 (int min: 1 max: 8)})))

(render)

