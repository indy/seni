(define 
  coords1 {[[-384.501 -98.136]
            [329.109 479.700]
            [-379.652 -248.992]
            [-408.700 443.968]]
           (gen/vector min: -500 max: 500)}
  coords2 {[[160.088 -124.315]
            [-291.133 -357.968]
            [290.588 432.570]
            [442.875 475.219]]
           (gen/vector min: -500 max: 500)}
  coords3 {[[115.066 -95.138]
            [-485.132 -200.796]
            [-367.920 285.440]
            [422.032 -212.102]]
           (gen/vector min: -500 max: 500)}

  col-fn-1 (col/procedural-fn a: {[0.525 0.911 0.163] (gen/scalar)}
                              b: {[0.091 0.084 0.211] (gen/scalar)}
                              c: {[0.211 0.804 0.624] (gen/scalar)}
                              d: {[0.498 0.672 0.286] (gen/scalar)}
                              alpha: 0.08)
  col-fn-2 (col/procedural-fn a: {[0.265 0.977 0.017] (gen/scalar)}
                              b: {[0.737 0.981 0.656] (gen/scalar)}
                              c: {[0.029 0.116 0.078] (gen/scalar)}
                              d: {[0.046 0.362 0.756] (gen/scalar)}
                              alpha: 0.08)
  col-fn-3 (col/procedural-fn a: {[0.897 0.589 0.075] (gen/scalar)}
                              b: {[0.561 0.365 0.110] (gen/scalar)}
                              c: {[0.635 0.130 0.463] (gen/scalar)}
                              d: {[0.481 0.974 0.761] (gen/scalar)}
                              alpha: 0.08))


(fn (wash variation: 200
          line-width: 70
          line-segments: 5
          colour: (col/rgb r: 0.627 g: 0.627 b: 0.627 alpha: 0.4)
          seed: 272)

  (fn (v x: 0 y: 0 z: 0 scale: 1)
    (+ y (* scale (prng/perlin-signed x: x y: y z: z))))

  (define 
    w/3 (/ canvas/width 3)
    h/3 (/ canvas/height 3))

  (loop (h from: -20 to: 1020 increment: 20)
    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[0 (v x: 0 y: h z: seed scale: variation)]
                     [w/3 (v x: w/3 y: h z: seed scale: variation)]
                     [(* w/3 2) (v x: (* w/3 2) y: h z: seed scale: variation)]
                     [canvas/width (v x: canvas/width y: h z: seed scale: variation)]]
            colour: colour)

    (bezier tessellation: line-segments
            line-width: line-width
            coords: [[(v x: 0 y: h z: seed scale: variation) 0]
                     [(v x: h/3 y: h z: seed scale: variation) h/3]
                     [(v x: (* h/3 2) y: h z: seed scale: variation) (* h/3 2)]
                     [(v x: canvas/height y: h z: seed scale: variation) canvas/height]]
            colour: colour)))


(fn (draw)
  (loop (t from: 0 upto: 1 steps: 200)
    (poly coords: [(interp/bezier t: t coords: coords1)
                   (interp/bezier t: t coords: coords2)
                   (interp/bezier t: t coords: coords3)]
          colours: [(col-fn-1 t: t)
                    (col-fn-2 t: t)
                    (col-fn-3 t: t)])))

(fn (render)
  (wash colour: {(col/rgb r: 0.127 g: 0.791 b: 0.743 alpha: 0.740) (gen/col)})
  (on-matrix-stack
    (translate vector: [(/ canvas/width 1) (/ canvas/height 2)])
    (scale scalar: 2)
    (repeat/rotate-mirrored draw: draw
                            copies: {2 (gen/int min: 1 max: 30)})))

(render)
