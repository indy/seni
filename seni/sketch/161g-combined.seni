(define
  focal-fg-1 (focal/point position: {[655 446] (int min: 0 max: 1000)}
                          distance: {342 (int min: 0 max: 1000)}
                          falloff: "linear")
  focal-fg-2 (focal/point position: {[889 337] (int min: 0 max: 1000)}
                          distance: {574 (int min: 0 max: 1000)}
                          falloff: "linear")
  col-fn-fg (col/bezier-fn a: {(col/rgb r: 0.648 g: 0.717 b: 0.807 alpha: 0.141) (col)}
                           b: {(col/rgb r: 0.857 g: 0.432 b: 0.853 alpha: 0.628) (col)}
                           c: {(col/rgb r: 0.890 g: 0.001 b: 0.561 alpha: 0.571) (col)}
                           d: {(col/rgb r: 0.912 g: 0.793 b: 0.294 alpha: 0.060) (col)})

  focal-bg-1 (focal/point position: {[587 323] (int min: 0 max: 1000)}
                          distance: {820 (int min: 0 max: 1000)}
                          falloff: "linear")
  focal-bg-2 (focal/point position: {[545 830] (int min: 0 max: 1000)}
                          distance: {730 (int min: 0 max: 1000)}
                          falloff: "linear")
  col-fn-bg (col/bezier-fn a: {(col/rgb r: 0.666 g: 0.618 b: 0.220 alpha: 0.510) (col)}
                           b: {(col/rgb r: 0.919 g: 0.641 b: 0.994 alpha: 0.307) (col)}
                           c: {(col/rgb r: 0.286 g: 0.472 b: 0.934 alpha: 0.476) (col)}
                           d: {(col/rgb r: 0.202 g: 0.294 b: 0.926 alpha: 0.428) (col)})

  ;; fade out any lines which are far away from the focal points
  interest (interp/fn from: [0.2 1.5] to: [0 1] clamping: true)
  )

;; evenly spaces out the canvas into nXn chunks and invokes the 
;; function 'fun' for each chunk, passing in the centre position
;;
(fn (good-grid n: 10 fun: (fn (a) 1))
  (define
    remap (interp/fn from: [0 (+ n 1)] to: [0 1000]))
  (loop (y from: 1 upto: n)
    (loop (x from: 1 upto: n)
      (fun position: [(remap val: x) (remap val: y)]))))

(fn (make-draw-element focal-fn-1: 1
                       focal-fn-2: 1
                       rotate-factor: 1
                       width: 21
                       height: 239
                       col-fn: 1)
    (fn (draw-element position: [0 0])
        (define
          interest-1 (focal-fn-1 position: position)
          interest-2 (focal-fn-2 position: position)
          combined-interest (+ interest-1 interest-2)
          alpha (interest val: combined-interest))
        (on-matrix-stack
         (translate vector: position)
         (rotate angle: (* combined-interest rotate-factor))
         (circle position: [0 0]
                 colour: (col/set-alpha colour: (col-fn t: interest-1) value: alpha)
                 width: width
                 height: height))))

(good-grid n: {33 (int min: 30 max: 40)}
           fun: (make-draw-element focal-fn-1: focal-bg-1
                                   focal-fn-2: focal-bg-2
                                   rotate-factor: {348 (int min: 1 max: 400)}
                                   width: {54 (int min: 10 max: 200)}
                                   height: {467 (int min: 20 max: 500)}
                                   col-fn: col-fn-bg))

(good-grid n: {36 (int min: 30 max: 40)}
           fun: (make-draw-element focal-fn-1: focal-fg-1
                                   focal-fn-2: focal-fg-2
                                   rotate-factor: {112 (int min: 1 max: 400)}
                                   width: {21 (int min: 10 max: 200)}
                                   height: {239 (int min: 20 max: 500)}
                                   col-fn: col-fn-fg))
